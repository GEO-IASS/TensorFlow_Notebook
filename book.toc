\contentsline {chapter}{\numberline {1}deeplearning}{1}{chapter.1}
\contentsline {section}{\numberline {1.1}降维}{1}{section.1.1}
\contentsline {subsection}{\numberline {1.1.1}自编码}{1}{subsection.1.1.1}
\contentsline {subsection}{\numberline {1.1.2}自动降噪编码}{1}{subsection.1.1.2}
\contentsline {subsection}{\numberline {1.1.3}手写体数据自编码}{2}{subsection.1.1.3}
\contentsline {section}{\numberline {1.2}稀疏编码}{7}{section.1.2}
\contentsline {subsection}{\numberline {1.2.1}稀疏编码的概率表示}{8}{subsection.1.2.1}
\contentsline {section}{\numberline {1.3}PCA}{10}{section.1.3}
\contentsline {subsection}{\numberline {1.3.1}数学定义}{10}{subsection.1.3.1}
\contentsline {section}{\numberline {1.4}KL散度}{11}{section.1.4}
\contentsline {subsection}{\numberline {1.4.1}交叉熵}{13}{subsection.1.4.1}
\contentsline {subsection}{\numberline {1.4.2}相对熵}{13}{subsection.1.4.2}
\contentsline {chapter}{\numberline {2}Tensorflow基础}{15}{chapter.2}
\contentsline {section}{\numberline {2.1}Tensorflow基础概念}{15}{section.2.1}
\contentsline {subsection}{\numberline {2.1.1}Rank}{15}{subsection.2.1.1}
\contentsline {subsection}{\numberline {2.1.2}获取Tensor对象的rank}{16}{subsection.2.1.2}
\contentsline {subsection}{\numberline {2.1.3}Tensor的切片}{16}{subsection.2.1.3}
\contentsline {subsection}{\numberline {2.1.4}形状}{17}{subsection.2.1.4}
\contentsline {subsection}{\numberline {2.1.5}获取tf.Tensor对象的形状}{17}{subsection.2.1.5}
\contentsline {subsection}{\numberline {2.1.6}改变Tensor的形状}{17}{subsection.2.1.6}
\contentsline {subsection}{\numberline {2.1.7}数据类型}{18}{subsection.2.1.7}
\contentsline {subsection}{\numberline {2.1.8}计算Tensor}{18}{subsection.2.1.8}
\contentsline {subsection}{\numberline {2.1.9}打印Tensor}{19}{subsection.2.1.9}
\contentsline {section}{\numberline {2.2}Variable}{19}{section.2.2}
\contentsline {subsection}{\numberline {2.2.1}创建变量}{19}{subsection.2.2.1}
\contentsline {subsection}{\numberline {2.2.2}变量集合}{20}{subsection.2.2.2}
\contentsline {subsection}{\numberline {2.2.3}配置设备}{20}{subsection.2.2.3}
\contentsline {subsection}{\numberline {2.2.4}初始化变量}{21}{subsection.2.2.4}
\contentsline {subsection}{\numberline {2.2.5}用变量}{21}{subsection.2.2.5}
\contentsline {subsection}{\numberline {2.2.6}保存和恢复}{22}{subsection.2.2.6}
\contentsline {subsection}{\numberline {2.2.7}checkpoint文件}{22}{subsection.2.2.7}
\contentsline {subsection}{\numberline {2.2.8}保存变量}{22}{subsection.2.2.8}
\contentsline {subsection}{\numberline {2.2.9}恢复变量}{23}{subsection.2.2.9}
\contentsline {subsection}{\numberline {2.2.10}选择变量恢复}{23}{subsection.2.2.10}
\contentsline {subsection}{\numberline {2.2.11}共享变量}{24}{subsection.2.2.11}
\contentsline {section}{\numberline {2.3}图(Graphs)和会话(Session)}{26}{section.2.3}
\contentsline {subsection}{\numberline {2.3.1}为什么用数据流图？}{26}{subsection.2.3.1}
\contentsline {subsection}{\numberline {2.3.2}建立一个tf.Graph}{26}{subsection.2.3.2}
\contentsline {subsection}{\numberline {2.3.3}命名你的操作}{27}{subsection.2.3.3}
\contentsline {subsection}{\numberline {2.3.4}放置操作在不同的设备上}{27}{subsection.2.3.4}
\contentsline {subsection}{\numberline {2.3.5}Tensor-like对象}{29}{subsection.2.3.5}
\contentsline {subsection}{\numberline {2.3.6}在tf.Session执行图}{29}{subsection.2.3.6}
\contentsline {subsection}{\numberline {2.3.7}创建tf.Session}{29}{subsection.2.3.7}
\contentsline {subsection}{\numberline {2.3.8}用tf.Session.run执行操作}{30}{subsection.2.3.8}
\contentsline {subsection}{\numberline {2.3.9}GraphDef和MetaGraphDef}{31}{subsection.2.3.9}
\contentsline {subsection}{\numberline {2.3.10}可视化你的图}{32}{subsection.2.3.10}
\contentsline {subsection}{\numberline {2.3.11}用多图编程}{35}{subsection.2.3.11}
\contentsline {section}{\numberline {2.4}数据集}{36}{section.2.4}
\contentsline {subsection}{\numberline {2.4.1}基本的机制}{36}{subsection.2.4.1}
\contentsline {subsection}{\numberline {2.4.2}数据结构}{36}{subsection.2.4.2}
\contentsline {subsection}{\numberline {2.4.3}创建一个迭代器}{37}{subsection.2.4.3}
\contentsline {subsection}{\numberline {2.4.4}消耗迭代器的值}{40}{subsection.2.4.4}
\contentsline {subsection}{\numberline {2.4.5}读输入数据}{41}{subsection.2.4.5}
\contentsline {subsubsection}{消耗NumPy数据}{41}{subsubsection*.9}
\contentsline {subsection}{\numberline {2.4.6}消耗TFRecord数据}{42}{subsection.2.4.6}
\contentsline {subsection}{\numberline {2.4.7}用Dataset.map()处理数据}{42}{subsection.2.4.7}
\contentsline {subsection}{\numberline {2.4.8}解析tf.Example protocal buffer消息}{43}{subsection.2.4.8}
\contentsline {subsection}{\numberline {2.4.9}解码图像数据变换大小}{43}{subsection.2.4.9}
\contentsline {subsection}{\numberline {2.4.10}用专门的Python logic}{43}{subsection.2.4.10}
\contentsline {subsection}{\numberline {2.4.11}简单的批处理}{44}{subsection.2.4.11}
\contentsline {subsection}{\numberline {2.4.12}批量的tensorpadding}{45}{subsection.2.4.12}
\contentsline {subsection}{\numberline {2.4.13}处理多epoch}{45}{subsection.2.4.13}
\contentsline {subsection}{\numberline {2.4.14}随机打乱输入数据}{46}{subsection.2.4.14}
\contentsline {subsection}{\numberline {2.4.15}用高级APIs}{46}{subsection.2.4.15}
\contentsline {section}{\numberline {2.5}线程和队列}{48}{section.2.5}
\contentsline {subsection}{\numberline {2.5.1}队列用法}{48}{subsection.2.5.1}
\contentsline {subsection}{\numberline {2.5.2}手动线程管理}{50}{subsection.2.5.2}
\contentsline {subsection}{\numberline {2.5.3}Coordinator}{50}{subsection.2.5.3}
\contentsline {subsection}{\numberline {2.5.4}QueueRunner}{51}{subsection.2.5.4}
\contentsline {subsection}{\numberline {2.5.5}处理异常}{52}{subsection.2.5.5}
\contentsline {section}{\numberline {2.6}tf.estimator快速导航}{53}{section.2.6}
\contentsline {subsection}{\numberline {2.6.1}完成神经网络源代码}{53}{subsection.2.6.1}
\contentsline {subsection}{\numberline {2.6.2}载入CSV数据进入TensorFlow}{56}{subsection.2.6.2}
\contentsline {subsection}{\numberline {2.6.3}构造神经网络分类器}{58}{subsection.2.6.3}
\contentsline {subsection}{\numberline {2.6.4}描述训练的输入pipline}{58}{subsection.2.6.4}
\contentsline {subsection}{\numberline {2.6.5}为iris训练集拟合DNNClassfier}{59}{subsection.2.6.5}
\contentsline {subsection}{\numberline {2.6.6}评估模型的精度}{59}{subsection.2.6.6}
\contentsline {subsection}{\numberline {2.6.7}分类新的样本}{60}{subsection.2.6.7}
\contentsline {section}{\numberline {2.7}用tf.estimator创建一个输入函数}{60}{section.2.7}
\contentsline {subsection}{\numberline {2.7.1}用input\_fn自定义Pipeline}{60}{subsection.2.7.1}
\contentsline {subsection}{\numberline {2.7.2}input\_fn的分解}{61}{subsection.2.7.2}
\contentsline {subsection}{\numberline {2.7.3}转换特征数据为Tensor}{61}{subsection.2.7.3}
\contentsline {subsection}{\numberline {2.7.4}传递input\_fn数据到你的模型}{62}{subsection.2.7.4}
\contentsline {subsection}{\numberline {2.7.5}波士顿房价的神经网络模型}{64}{subsection.2.7.5}
\contentsline {subsection}{\numberline {2.7.6}建立}{64}{subsection.2.7.6}
\contentsline {subsection}{\numberline {2.7.7}导入的房子数据}{64}{subsection.2.7.7}
\contentsline {subsection}{\numberline {2.7.8}定义特征列创建回归器}{65}{subsection.2.7.8}
\contentsline {subsection}{\numberline {2.7.9}构建input\_fn}{65}{subsection.2.7.9}
\contentsline {subsection}{\numberline {2.7.10}训练回归器}{66}{subsection.2.7.10}
\contentsline {subsection}{\numberline {2.7.11}评估模型}{66}{subsection.2.7.11}
\contentsline {subsection}{\numberline {2.7.12}做出预测}{67}{subsection.2.7.12}
\contentsline {section}{\numberline {2.8}tf.contrib.learn采集和监控基础}{67}{section.2.8}
\contentsline {subsection}{\numberline {2.8.1}建立}{67}{subsection.2.8.1}
\contentsline {subsection}{\numberline {2.8.2}概览}{69}{subsection.2.8.2}
\contentsline {subsection}{\numberline {2.8.3}让你的TensorFlow能采集}{69}{subsection.2.8.3}
\contentsline {subsection}{\numberline {2.8.4}配置Streaming评估的ValidationMonitor}{69}{subsection.2.8.4}
\contentsline {subsection}{\numberline {2.8.5}每N步评估}{70}{subsection.2.8.5}
\contentsline {subsection}{\numberline {2.8.6}用MetricSpec自定义评估方案}{71}{subsection.2.8.6}
\contentsline {subsection}{\numberline {2.8.7}用ValidationMonitor提前终止}{72}{subsection.2.8.7}
\contentsline {subsection}{\numberline {2.8.8}用TensorBoard可视化采集数据}{73}{subsection.2.8.8}
\contentsline {subsection}{\numberline {2.8.9}batch normalization}{74}{subsection.2.8.9}
\contentsline {section}{\numberline {2.9}常见的激活函数}{75}{section.2.9}
\contentsline {subsection}{\numberline {2.9.1}relu}{75}{subsection.2.9.1}
\contentsline {subsection}{\numberline {2.9.2}relu6}{76}{subsection.2.9.2}
\contentsline {subsection}{\numberline {2.9.3}sigmoid}{78}{subsection.2.9.3}
\contentsline {subsection}{\numberline {2.9.4}relu和softplus}{79}{subsection.2.9.4}
\contentsline {subsection}{\numberline {2.9.5}dropout}{81}{subsection.2.9.5}
\contentsline {section}{\numberline {2.10}CNN常用函数}{81}{section.2.10}
\contentsline {subsection}{\numberline {2.10.1}卷积函数}{81}{subsection.2.10.1}
\contentsline {subsection}{\numberline {2.10.2}常见的分类函数}{82}{subsection.2.10.2}
\contentsline {section}{\numberline {2.11}优化方法}{83}{section.2.11}
\contentsline {subsection}{\numberline {2.11.1}BGD}{83}{subsection.2.11.1}
\contentsline {subsection}{\numberline {2.11.2}SGD}{83}{subsection.2.11.2}
\contentsline {subsection}{\numberline {2.11.3}momentum}{84}{subsection.2.11.3}
\contentsline {subsection}{\numberline {2.11.4}Nesterov Momentum}{84}{subsection.2.11.4}
\contentsline {subsection}{\numberline {2.11.5}Adagrad}{84}{subsection.2.11.5}
\contentsline {subsection}{\numberline {2.11.6}RMSprop}{84}{subsection.2.11.6}
\contentsline {subsection}{\numberline {2.11.7}Adam}{84}{subsection.2.11.7}
\contentsline {subsection}{\numberline {2.11.8}构造简单的神经网络拟合数据}{85}{subsection.2.11.8}
\contentsline {section}{\numberline {2.12}TensorBoard}{87}{section.2.12}
\contentsline {subsection}{\numberline {2.12.1}TensorBoard Histogram Dashboard}{89}{subsection.2.12.1}
\contentsline {subsection}{\numberline {2.12.2}一个简单的例子}{89}{subsection.2.12.2}
\contentsline {subsection}{\numberline {2.12.3}Overlay Mode}{92}{subsection.2.12.3}
\contentsline {subsection}{\numberline {2.12.4}多个分布}{93}{subsection.2.12.4}
\contentsline {subsection}{\numberline {2.12.5}更多分布}{95}{subsection.2.12.5}
\contentsline {subsection}{\numberline {2.12.6}poisson分布}{98}{subsection.2.12.6}
\contentsline {subsection}{\numberline {2.12.7}结合所有的数据到一张图向上}{99}{subsection.2.12.7}
\contentsline {section}{\numberline {2.13}CNN手写体数据识别}{100}{section.2.13}
\contentsline {subsection}{\numberline {2.13.1}mnist数据集}{100}{subsection.2.13.1}
\contentsline {section}{\numberline {2.14}RNN}{104}{section.2.14}
\contentsline {subsection}{\numberline {2.14.1}The Problem Long-Term Dependencies}{105}{subsection.2.14.1}
\contentsline {subsection}{\numberline {2.14.2}LSTM网络}{105}{subsection.2.14.2}
\contentsline {subsection}{\numberline {2.14.3}LSTMs想法的核心}{106}{subsection.2.14.3}
\contentsline {subsection}{\numberline {2.14.4}一步步的设置}{106}{subsection.2.14.4}
\contentsline {subsection}{\numberline {2.14.5}LSTM的多种变体}{107}{subsection.2.14.5}
\contentsline {subsection}{\numberline {2.14.6}向量字表示}{109}{subsection.2.14.6}
\contentsline {subsubsection}{Vector Representation of Words}{109}{subsubsection*.46}
\contentsline {subsubsection}{处理噪声的对比训练}{110}{subsubsection*.47}
\contentsline {subsubsection}{Skip-gram模型}{112}{subsubsection*.50}
\contentsline {subsubsection}{训练过程}{115}{subsubsection*.52}
\contentsline {subsubsection}{嵌套学习结果可视化}{116}{subsubsection*.53}
\contentsline {subsubsection}{嵌套学习的评估:类比推理}{116}{subsubsection*.55}
\contentsline {subsubsection}{优化实现}{117}{subsubsection*.56}
\contentsline {subsection}{\numberline {2.14.7}RNN}{117}{subsection.2.14.7}
\contentsline {subsubsection}{下载及准备数据}{118}{subsubsection*.57}
\contentsline {subsubsection}{LSTM}{118}{subsubsection*.58}
\contentsline {subsubsection}{截断反向传播}{118}{subsubsection*.59}
\contentsline {subsubsection}{输入}{119}{subsubsection*.60}
\contentsline {subsubsection}{损失函数}{119}{subsubsection*.61}
\contentsline {subsubsection}{多个LSTM层堆叠}{119}{subsubsection*.62}
\contentsline {subsubsection}{编译并运行代码}{120}{subsubsection*.63}
\contentsline {chapter}{\numberline {3}Tensorflow进阶}{121}{chapter.3}
\contentsline {section}{\numberline {3.1}模型存储和加载}{121}{section.3.1}
\contentsline {section}{\numberline {3.2}用GPU}{122}{section.3.2}
\contentsline {subsection}{\numberline {3.2.1}手工配置设备}{122}{subsection.3.2.1}
\contentsline {subsection}{\numberline {3.2.2}允许GPU的内存增长}{123}{subsection.3.2.2}
\contentsline {section}{\numberline {3.3}如何利用Inception的最后一层重新训练新的分类}{125}{section.3.3}
\contentsline {subsection}{\numberline {3.3.1}训练花}{125}{subsection.3.3.1}
\contentsline {subsection}{\numberline {3.3.2}瓶颈}{126}{subsection.3.3.2}
\contentsline {subsection}{\numberline {3.3.3}训练}{126}{subsection.3.3.3}
\contentsline {subsection}{\numberline {3.3.4}用TensorBoard可视化}{127}{subsection.3.3.4}
\contentsline {subsection}{\numberline {3.3.5}用重新训练的模型}{127}{subsection.3.3.5}
\contentsline {subsection}{\numberline {3.3.6}在你自己的分类上训练}{127}{subsection.3.3.6}
\contentsline {subsection}{\numberline {3.3.7}创建一个训练图像集合}{128}{subsection.3.3.7}
\contentsline {subsection}{\numberline {3.3.8}训练步骤}{128}{subsection.3.3.8}
\contentsline {subsection}{\numberline {3.3.9}扭曲}{129}{subsection.3.3.9}
\contentsline {subsection}{\numberline {3.3.10}超参数}{129}{subsection.3.3.10}
\contentsline {subsection}{\numberline {3.3.11}训练，验证，测试集}{129}{subsection.3.3.11}
\contentsline {subsection}{\numberline {3.3.12}更对模型架构}{130}{subsection.3.3.12}
\contentsline {section}{\numberline {3.4}TF layer向导：建立一个卷积神经网络}{130}{section.3.4}
\contentsline {subsection}{\numberline {3.4.1}开始}{131}{subsection.3.4.1}
\contentsline {subsection}{\numberline {3.4.2}介绍卷积神经网络}{131}{subsection.3.4.2}
\contentsline {subsection}{\numberline {3.4.3}建立CNN MNIST分类器}{131}{subsection.3.4.3}
\contentsline {subsection}{\numberline {3.4.4}输入层}{132}{subsection.3.4.4}
\contentsline {subsection}{\numberline {3.4.5}第一层卷积层}{133}{subsection.3.4.5}
\contentsline {subsection}{\numberline {3.4.6}池化层1}{133}{subsection.3.4.6}
\contentsline {subsection}{\numberline {3.4.7}二层卷积和池化}{134}{subsection.3.4.7}
\contentsline {subsection}{\numberline {3.4.8}Dense layer}{134}{subsection.3.4.8}
\contentsline {subsection}{\numberline {3.4.9}Logits Layers}{135}{subsection.3.4.9}
\contentsline {subsection}{\numberline {3.4.10}常见的预测}{135}{subsection.3.4.10}
\contentsline {subsection}{\numberline {3.4.11}计算Loss}{135}{subsection.3.4.11}
\contentsline {subsection}{\numberline {3.4.12}配置训练操作}{136}{subsection.3.4.12}
\contentsline {subsection}{\numberline {3.4.13}增加评估度量}{136}{subsection.3.4.13}
\contentsline {section}{\numberline {3.5}训练评估CNN MNIST分类器}{137}{section.3.5}
\contentsline {subsection}{\numberline {3.5.1}载入训练和测试数据}{137}{subsection.3.5.1}
\contentsline {subsection}{\numberline {3.5.2}创建Estimator}{137}{subsection.3.5.2}
\contentsline {subsection}{\numberline {3.5.3}建立Logging Hook}{137}{subsection.3.5.3}
\contentsline {subsection}{\numberline {3.5.4}选练模型}{138}{subsection.3.5.4}
\contentsline {subsection}{\numberline {3.5.5}评估模型}{138}{subsection.3.5.5}
\contentsline {subsection}{\numberline {3.5.6}运行模型}{139}{subsection.3.5.6}
\contentsline {chapter}{\numberline {4}扩展}{141}{chapter.4}
\contentsline {section}{\numberline {4.1}TensorFlow架构}{141}{section.4.1}
\contentsline {section}{\numberline {4.2}概述}{141}{section.4.2}
\contentsline {subsection}{\numberline {4.2.1}Client}{143}{subsection.4.2.1}
\contentsline {subsection}{\numberline {4.2.2}Distributed master}{143}{subsection.4.2.2}
\contentsline {subsection}{\numberline {4.2.3}Worker Service}{144}{subsection.4.2.3}
\contentsline {section}{\numberline {4.3}内核实现}{145}{section.4.3}
\contentsline {chapter}{\numberline {5}Performance}{147}{chapter.5}
\contentsline {section}{\numberline {5.1}最好的实践}{147}{section.5.1}
\contentsline {section}{\numberline {5.2}从源代码创建安装}{147}{section.5.2}
\contentsline {subsection}{\numberline {5.2.1}利用队列读取数据}{148}{subsection.5.2.1}
\contentsline {subsection}{\numberline {5.2.2}在CPU上的预处理}{148}{subsection.5.2.2}
\contentsline {subsection}{\numberline {5.2.3}用大文件}{149}{subsection.5.2.3}
\contentsline {subsection}{\numberline {5.2.4}用NCHW图像数据格式}{149}{subsection.5.2.4}
\contentsline {subsection}{\numberline {5.2.5}用融批规范}{149}{subsection.5.2.5}
\contentsline {section}{\numberline {5.3}性能向导}{150}{section.5.3}
\contentsline {section}{\numberline {5.4}好性能模型}{150}{section.5.4}
\contentsline {section}{\numberline {5.5}Benchmark}{150}{section.5.5}
\contentsline {section}{\numberline {5.6}如何用TensorFlow量化神经网络}{150}{section.5.6}
\contentsline {subsection}{\numberline {5.6.1}为什么做量化工作}{150}{subsection.5.6.1}
\contentsline {subsection}{\numberline {5.6.2}为什么量化}{150}{subsection.5.6.2}
\contentsline {subsection}{\numberline {5.6.3}为什么不直接训练低精度}{151}{subsection.5.6.3}
\contentsline {subsection}{\numberline {5.6.4}你能如何量化你的模型}{151}{subsection.5.6.4}
\contentsline {subsection}{\numberline {5.6.5}如何量化处理工作}{152}{subsection.5.6.5}
\contentsline {subsection}{\numberline {5.6.6}量化Tensor将呈现什么}{154}{subsection.5.6.6}
\contentsline {subsection}{\numberline {5.6.7}下一步}{155}{subsection.5.6.7}
\contentsline {chapter}{\numberline {6}常用的python模块}{157}{chapter.6}
\contentsline {section}{\numberline {6.1}Argparse}{157}{section.6.1}
\contentsline {subsection}{\numberline {6.1.1}ArgumentParser 对象}{158}{subsection.6.1.1}
\contentsline {subsection}{\numberline {6.1.2}prog}{158}{subsection.6.1.2}
\contentsline {subsection}{\numberline {6.1.3}add\_argument()方法}{163}{subsection.6.1.3}
\contentsline {section}{\numberline {6.2}path}{191}{section.6.2}
\contentsline {subsection}{\numberline {6.2.1}函数说明}{191}{subsection.6.2.1}
\contentsline {subsection}{\numberline {6.2.2}例子}{193}{subsection.6.2.2}
\contentsline {subsection}{\numberline {6.2.3}常见问题}{194}{subsection.6.2.3}
\contentsline {section}{\numberline {6.3}正则表达式介绍}{204}{section.6.3}
\contentsline {section}{\numberline {6.4}RE库的主要功能函数}{207}{section.6.4}
\contentsline {subsection}{\numberline {6.4.1}re表达式中的flags}{209}{subsection.6.4.1}
\contentsline {section}{\numberline {6.5}常用的sys函数}{214}{section.6.5}
\contentsline {section}{\numberline {6.6}collections}{221}{section.6.6}
\contentsline {subsection}{\numberline {6.6.1}namedtuple}{221}{subsection.6.6.1}
\contentsline {subsection}{\numberline {6.6.2}deque}{221}{subsection.6.6.2}
\contentsline {subsection}{\numberline {6.6.3}defaultdict}{222}{subsection.6.6.3}
\contentsline {subsection}{\numberline {6.6.4}OrderdDict}{222}{subsection.6.6.4}
\contentsline {subsection}{\numberline {6.6.5}Counter}{223}{subsection.6.6.5}
\contentsline {section}{\numberline {6.7}base64}{224}{section.6.7}
\contentsline {section}{\numberline {6.8}struct}{226}{section.6.8}
\contentsline {section}{\numberline {6.9}hashlib}{227}{section.6.9}
\contentsline {section}{\numberline {6.10}itertools}{229}{section.6.10}
\contentsline {subsection}{\numberline {6.10.1}cycle}{229}{subsection.6.10.1}
\contentsline {subsection}{\numberline {6.10.2}chain()}{230}{subsection.6.10.2}
\contentsline {section}{\numberline {6.11}contextlib}{231}{section.6.11}
\contentsline {section}{\numberline {6.12}XML}{234}{section.6.12}
\contentsline {section}{\numberline {6.13}HTMLParser}{235}{section.6.13}
\contentsline {section}{\numberline {6.14}ZipFile}{236}{section.6.14}
\contentsline {section}{\numberline {6.15}url}{237}{section.6.15}
\contentsline {subsection}{\numberline {6.15.1}urllib.request}{237}{subsection.6.15.1}
\contentsline {section}{\numberline {6.16}requests}{238}{section.6.16}
\contentsline {subsection}{\numberline {6.16.1}发送请求}{238}{subsection.6.16.1}
\contentsline {subsection}{\numberline {6.16.2}requests库的7个主要方法}{238}{subsection.6.16.2}
\contentsline {subsection}{\numberline {6.16.3}request对象的属性}{238}{subsection.6.16.3}
\contentsline {subsection}{\numberline {6.16.4}理解encoding和apparent\_encoding}{239}{subsection.6.16.4}
\contentsline {subsection}{\numberline {6.16.5}理解Requests库的异常}{239}{subsection.6.16.5}
\contentsline {subsection}{\numberline {6.16.6}HTTP协议}{239}{subsection.6.16.6}
\contentsline {chapter}{\numberline {7}Bazel}{243}{chapter.7}
\contentsline {section}{\numberline {7.1}Bazel start}{243}{section.7.1}
\contentsline {subsection}{\numberline {7.1.1}用工作空间}{243}{subsection.7.1.1}
\contentsline {chapter}{\numberline {8}Tensorflow技巧}{245}{chapter.8}
\contentsline {section}{\numberline {8.1}文件读取}{245}{section.8.1}
\contentsline {chapter}{\numberline {9}Tensorflow API}{247}{chapter.9}
\contentsline {section}{\numberline {9.1}tf.app.flags}{247}{section.9.1}
\contentsline {subsection}{\numberline {9.1.1}DEFINE\_boolean}{247}{subsection.9.1.1}
\contentsline {subsection}{\numberline {9.1.2}DEFINE\_boolean}{247}{subsection.9.1.2}
\contentsline {subsection}{\numberline {9.1.3}DEFINE\_float}{247}{subsection.9.1.3}
\contentsline {subsection}{\numberline {9.1.4}DEFINE\_integer}{248}{subsection.9.1.4}
\contentsline {subsection}{\numberline {9.1.5}DEFINE\_string}{248}{subsection.9.1.5}
\contentsline {subsection}{\numberline {9.1.6}tf.gather}{248}{subsection.9.1.6}
\contentsline {subsection}{\numberline {9.1.7}tf.placeholder}{249}{subsection.9.1.7}
\contentsline {subsection}{\numberline {9.1.8}tf.squeeze}{250}{subsection.9.1.8}
\contentsline {subsection}{\numberline {9.1.9}tf.metrics}{251}{subsection.9.1.9}
\contentsline {subsection}{\numberline {9.1.10}tf.stack}{251}{subsection.9.1.10}
\contentsline {subsection}{\numberline {9.1.11}tf.reshape}{252}{subsection.9.1.11}
\contentsline {subsection}{\numberline {9.1.12}tf.random\_crop}{253}{subsection.9.1.12}
\contentsline {subsection}{\numberline {9.1.13}tf.random\_gamma}{253}{subsection.9.1.13}
\contentsline {subsection}{\numberline {9.1.14}tf.random\_normal}{254}{subsection.9.1.14}
\contentsline {subsection}{\numberline {9.1.15}\textbf {tf.random\_normal\_initializer}}{255}{subsection.9.1.15}
\contentsline {subsection}{\numberline {9.1.16}tf.random\_possion}{256}{subsection.9.1.16}
\contentsline {subsection}{\numberline {9.1.17}random\_shuffle}{257}{subsection.9.1.17}
\contentsline {subsection}{\numberline {9.1.18}tf.random\_uniform}{257}{subsection.9.1.18}
\contentsline {subsection}{\numberline {9.1.19}\textbf {tf.random\_uniform\_initializer}}{258}{subsection.9.1.19}
\contentsline {subsection}{\numberline {9.1.20}tf.one\_hot}{259}{subsection.9.1.20}
\contentsline {subsection}{\numberline {9.1.21}tf.unstack}{261}{subsection.9.1.21}
\contentsline {section}{\numberline {9.2}tf.Vairable}{263}{section.9.2}
\contentsline {subsection}{\numberline {9.2.1}Variable类}{263}{subsection.9.2.1}
\contentsline {subsection}{\numberline {9.2.2}方法}{264}{subsection.9.2.2}
\contentsline {subsection}{\numberline {9.2.3}参数}{270}{subsection.9.2.3}
\contentsline {section}{\numberline {9.3}tf.image}{277}{section.9.3}
\contentsline {subsection}{\numberline {9.3.1}tf.image.decode\_gif}{277}{subsection.9.3.1}
\contentsline {subsection}{\numberline {9.3.2}tf.image.decode\_jpeg}{277}{subsection.9.3.2}
\contentsline {subsection}{\numberline {9.3.3}tf.image.encode\_jpeg}{278}{subsection.9.3.3}
\contentsline {subsection}{\numberline {9.3.4}tf.image.decode\_png}{278}{subsection.9.3.4}
\contentsline {subsection}{\numberline {9.3.5}tf.image.encode\_png}{279}{subsection.9.3.5}
\contentsline {subsection}{\numberline {9.3.6}tf.image.decode\_image}{279}{subsection.9.3.6}
\contentsline {subsection}{\numberline {9.3.7}tf.image.resize\_images}{279}{subsection.9.3.7}
\contentsline {section}{\numberline {9.4}layer}{281}{section.9.4}
\contentsline {subsection}{\numberline {9.4.1}tf.layers.average\_pooling1d}{281}{subsection.9.4.1}
\contentsline {subsection}{\numberline {9.4.2}tf.layers.average\_pooling2d}{281}{subsection.9.4.2}
\contentsline {subsection}{\numberline {9.4.3}tf.layers.average\_pooling3d}{282}{subsection.9.4.3}
\contentsline {subsection}{\numberline {9.4.4}tf.layers.batch\_normalization}{283}{subsection.9.4.4}
\contentsline {subsection}{\numberline {9.4.5}conv1d}{285}{subsection.9.4.5}
\contentsline {subsection}{\numberline {9.4.6}conv2d}{286}{subsection.9.4.6}
\contentsline {subsection}{\numberline {9.4.7}conv2d\_transpose}{288}{subsection.9.4.7}
\contentsline {subsection}{\numberline {9.4.8}conv3d}{289}{subsection.9.4.8}
\contentsline {subsection}{\numberline {9.4.9}conv3d\_transpose}{291}{subsection.9.4.9}
\contentsline {subsection}{\numberline {9.4.10}dense}{292}{subsection.9.4.10}
\contentsline {subsection}{\numberline {9.4.11}dropout}{293}{subsection.9.4.11}
\contentsline {subsection}{\numberline {9.4.12}max\_pool1d}{294}{subsection.9.4.12}
\contentsline {subsection}{\numberline {9.4.13}max\_pool2d}{294}{subsection.9.4.13}
\contentsline {subsection}{\numberline {9.4.14}max\_pool3d}{295}{subsection.9.4.14}
\contentsline {subsection}{\numberline {9.4.15}separable\_conv2d}{296}{subsection.9.4.15}
\contentsline {section}{\numberline {9.5}tf.train}{298}{section.9.5}
\contentsline {subsection}{\numberline {9.5.1}优化器}{298}{subsection.9.5.1}
\contentsline {subsubsection}{Optimizer}{298}{subsubsection*.75}
